# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default

steps:

- script: |
    export JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home"
    mvn install
  displayName: Build App

#- script: |
#    cd /Users/stephen/Documents/java-goof
#    snyk monitor --org=todolist --all-projects
#  displayName: 'Snyk Open Source'

#- script: |
#    cd /Users/stephen/Documents/java-goof
#    snyk code test --org=todolist --json | snyk-to-html -o /Users/stephen/Documents/java-goof/results-code.html
#  displayName: 'Snyk Code'
 
#- script: |
#    cd /Users/stephen/Documents/java-goof
#    snyk iac test --org=todolist --report || true
#  displayName: 'Snyk IaC'
  
#- script: |
#    cd /Users/stephen/Documents/java-goof
#    snyk container monitor freshdemo/todolist-goof:latest --file=/Users/stephen/Documents/java-goof/todolist-goof/Dockerfile || true
#  displayName: 'Snyk Container'
    
- script: |
     cd /Users/stephen/Documents/java-goof/todolist-goof
     docker build -f ./todolist-goof/Dockerfile -t northamerica-northeast2-docker.pkg.dev/snyk-cx-se-demo/sperciballi-registry/java-goof:latest .
  displayName: 'Build Image'

- script: 
     docker push northamerica-northeast2-docker.pkg.dev/snyk-cx-se-demo/sperciballi-registry/java-goof
  displayName: 'Push Image'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(BuildStagingDirectory)'
    Contents: 'results-code.html'
    TargetFolder: '$(BuildStagingDirectory)'


- publish: $(BuildStagingDirectory)/results-code.html
  artifact: results-code.html
